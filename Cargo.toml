[package]
name = "forestry-game"
version = "0.1.0"
authors = ["SmnTin <smn.pankv@gmail.com>"]
edition = "2021"
resolver = "2"

[target.'cfg(target_arch = "wasm32")'.features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
bevy = {version = "0.8.1", default-features = true}
chrono = "0.4"
bevy_simple_tilemap = "0.9.0"
bevy_ninepatch = "0.8.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.13"
trunk = "0.16.0"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

### Dependencies for native only.
#[target.'cfg(not(target_arch = "wasm32"))'.dependencies.bevy]
#features = ["bevy_asset", "bevy_animation", "bevy_audio", "bevy_ui", "bevy_sprite", "bevy_winit", "bevy_scene"]
#
## Dependencies for WASM only.
#[target.'cfg(target_arch = "wasm32")'.dependencies.bevy]
#features = ["bevy_asset", "bevy_animation", "bevy_audio", "bevy_ui", "bevy_sprite", "bevy_winit", "bevy_scene"]